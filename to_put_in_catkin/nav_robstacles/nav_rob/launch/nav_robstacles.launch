<launch>


  <!-- Transformation Configuration ... Setting Up the Relationships Between Coordinate Frames, but These relationships are based on the type of sensors we have --> 
  <node pkg="tf" type="static_transform_publisher" name="base_link_to_laser" args="0.06 0 0.08 0 0 0 base_link laser 30" />
  <node pkg="tf" type="static_transform_publisher" name="imu_broadcaster" args="0 0.06 0.02 0 0 0 base_link imu 30" />
  <node pkg="tf" type="static_transform_publisher" name="base_link_broadcaster" args="0 0 0.09 0 0 0 base_footprint base_link 30" />
  <!-- odom to base_footprint transform will be provided by the robot_pose_ekf node -->
  <!-- map to odom will be provided by the AMCL -->
  <node pkg="tf" type="static_transform_publisher" name="map_to_odom" args="0 0 0 0 0 0 map odom 30" />

  <!-- Wheel Encoder Tick Publisher and Base Controller Using Arduino -->  
  <!-- motor_controller_diff_drive_2.ino is the Arduino sketch -->
  <!-- Subscribe: /cmd_vel -->
  <!-- Publish: /right_ticks, /left_ticks -->
  <node pkg="rosserial_python" type="serial_node.py" name="serial_node">
    <param name="port" value="/dev/ttyACM0"/>
    <param name="baud" value="115200"/>
  </node>


 
<!-- Initial Pose and Goal Publisher/DonebyP -->
<!-- Publish: /initialpose, /move_base_simple/goal -->
<node pkg="rviz" type="rviz" name="rviz">
</node>
<!-- Subscribe: /initialpose, /move_base_simple/goal -->
<!-- Publish: /initial_2d, /goal_2d -->
<node pkg="loc_rob" type="rviz_user2d" name="rviz_user2d">


 

  <!-- Map File /Here we should get another map /DonebyP-->
  <arg name="map_file" default="$(find nav_robstacles)/maps/floorplan4.yaml"/>
	
  <!-- Map Server /DonebyP-->
  <!-- Publish: /map, /map_metadata -->
  <node pkg="map_server" name="map_server" type="map_server" args="$(arg map_file)" />
	
  <!-- Add AMCL example for differential drive robots for Localization /DonebyP-->
  <!-- Subscribe: /scan, /tf, /initialpose, /map -->
  <!-- Publish: /amcl_pose, /particlecloud, /tf -->
  <include file="$(find amcl)/examples/amcl_diff.launch"/>
	
  <!-- Move Base Node /DonebyP-->
  <!-- Subscribe: /move_base_simple/goal, we subscribe to the rviz user published topic-->
  <!-- Publish: /cmd_vel, This topic of type geometry_msgs is published by the move_base node-->
  <node pkg="move_base" type="move_base" respawn="false" name="move_base" output="screen">
    <rosparam file="$(find nav_rob)/param/common_cm.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find nav_rob)/param/common_cm.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find nav_rob)/param/local_cm.yaml" command="load" ns="local_costmap" />
    <rosparam file="$(find nav_rob)/param/global_cm.yaml" command="load" ns="global_costmap" />
    <rosparam file="$(find nav_rob)/param/base_local_planner.yaml" command="load" />
  </node>


</launch>
